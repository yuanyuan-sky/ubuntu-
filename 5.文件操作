#文件操作
##cat命令和less命令，显示文件内容
这两个命令，只能显示内容，不能修改内容
**cat命令**：一次行在终端显示文件的所有内容
==cat 文件路径==

	cd /var/log
	cat syslog
	***cat命令适合处理小文件
	cat -n syslog    给文件内容加上行号
	cat命令后可以跟两个文件的路径，将两个文件一并输出
**less命令**：分页显示文件内容
==less 文件路径==
	
	cd /var/log
	cat syslog
	常用快捷键
	空格键：文件内容读取下一个终端屏幕的行数，与PgDn键效果一样
	回车键：文件内容读取下一行，与向下键效果一样
	d键：前进半页（半个终端屏幕）
	b键：后退一页，与PgUp键效果一样
	y键：后退一行
	u键：后退半页
	q键：停止读取文件
	=号：显示在文件的什么位置，整个文件所含字符数
	h：显示帮助文档
	/:进入搜索模式，只要在/后面输入要搜索的文字，按回车即可，后面还可以跟正则表达式
	n：跳到下一个符合的搜索结果
	N：跳到上一个符合的搜索结果
##head命令和tail命令
显示文件的开头和结尾
==head 文件路径==：显示文件的头十行

	cd  /var/log
	head syslog          显示syslog文件的前十行
	head -n 5 syslog     显示syslog文件的前五行
==tail 文件路径==：显示文件结尾的十行

	cd /var/log
	tail syslog         显示syslog文件的后十行
	tail -n 5 syslog    显示syslog文件的后五行
	tail -f syslog       检查文件是否有追加内容，如果有就显示新增内容；使用Ctrl + c来终止 tail -f命令；默认每过一秒检查一下文件是否有更新
	tail -f -s 2.5 syslog    每隔2.5秒检查一次文件是否有更新
==touch命令==
touch命令一开始是用来修改文件的时间戳，就是修改文件的创建时间和修改时间

	touch 文件      如果文件不存在，则会创建文件，如果文件存在，则会修改文件的创建或修改时间
	touch new_file1 new_file2 同时创建两个文件
	touch “new file3”              创建文件名带空格的文件
==mkdir命令==：创建一个新目录
	
	mkdir new_folder
	mkdir new_folder1 new_folder2   同时创建两个目录
	mkdir “new folder3”    创建目录名带空格的目录
	mkdir -p one/two/three     先创建one目录，再在one里创建two目录，再在two目录里创建three目录
==cp 命令==：拷贝文件或者目录（copy）
	
	cp new_file  new_file_copy  //在当前位置创建了new_file的副本new_file_copy
	cp new_file Download/     //复制文件到Downloa文件夹下
	cp new_file Download/abc    //拷贝new_file到Download文件夹下，同时拷贝的文件名字为abc
	拷贝目录
	cp -r one one_copy  //复制one目录到当前位置，名字为one_copy（包括内容）
	cp -r one Download/  //复制一份one目录到Download文件夹下（包括内容）
==使用通配符 *==

	cp *.txt Download   //把当前目录下的所有.txt文件复制一份到Download文件夹下
	cp ha* Download     //把当前文件夹下凡是ha开头的文件都拷贝到Download文件夹下
==mv 命令==：移动/重命名文件或目录（move）

	mv file one  //将file文件移动到one目录下
	mv one Download  //将one文件夹移动到Download文件夹下，包括里面的内容
	mv one two   //将one目录重命名为two
	//事实上，linux中没有一个专门的命令用于重命名文件
==rm 命令==：删除文件或者目录（remove）

	删除的文件不会放进回收站，所以很难恢复。
	rm new_fie  //删除当前文件夹下的new_file文件
	rm new_file1 new_file2 new_file3  //同事删除3个文件
	-i 参数：删除时会询问用户是否确认删除
	rm -i new_file //删除new_file,询问用户是否确认删除，确认才会删除
	-f参数：不会询问是否删除，强制删除
	rm -f new_file 
	-r参数：递归删除，用来删除目录
	rm -r two  //删除two目录，包括其子目录和子文件
	
###文件系统
linux的文件有3部分：文件名、权限、文件内容。
文件名和文件内容是分开的，方便管理
####硬链接
使链接的两个文件共享同样的内容。
所以一旦文件1和文件2之间有了硬链接，那么修改文件1或者文件2，其实修改的都是相同的一块内容。删除其中一方，对另一方都没有影响，只有同事删除文件1和文件2，文件才会消失。
![](/media/yuanyuan/Elements/Ubuntu笔记/img/yinglianjie.png) 
**缺点：只能创建指向文件的硬链接，不能创建指向目录的硬链接（也可以，只是很麻烦）**

	inode： 文件内容的地址
	ls -i 文件  ：显示文件的inode
	创建硬链接
	ln file1 file2  //给file1创建硬链接file2
	file1和file2的inode是一样的
####软链接

	创建软链接
	ln -s file3 file4  //给file3创建软链接file4
![](/media/yuanyuan/Elements/Ubuntu笔记/img/ruanlianjie.png) 

	可以看到文件2不指向文件1的内容，而是指向了文件1的文件名（文件2就像是文件1的超链接一样）
	这样，他来的inode就不一样了
**特点：删除file2，不会有什么影响，但是删除file1，file2就变成了死链接**
**软链接可以指向目录**
	

	
	


	
	
	
	
	
	
	
	
	
